{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","panel","svgelem","getElementsByClassName","find","plotCanvas","svgnode","events","on","render","renderingCompleted","setElementHeight","height","row","_","isString","parseInt","replace","css","e","formatter","label","slice","fontSize","color","Math","round","percent","addSVG","parentSVG","SnapLib","default","paper","clear","childSVG","Snap","parse","svg_data","node","append","resizePlotCanvas","plotCss","margin","position","getAttribute","removeAttribute","initialized","doInit","handleMetric","$"],"mappings":";;;;;;;AAMe,WAASA,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACrD,QAAIC,KAAJ;AACA,QAAIC,UAAUJ,KAAK,CAAL,EAAQK,sBAAR,CAA+B,YAA/B,EAA6C,CAA7C,CAAd;AACAL,WAAOA,KAAKM,IAAL,CAAU,YAAV,CAAP;AACA,QAAIC,aAAaP,KAAKM,IAAL,CAAU,cAAV,CAAjB;AACA,QAAIE,OAAJ;;AAEAN,SAAKO,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAW;AAClCC;AACAT,WAAKU,kBAAL;AACD,KAHD;;AAKA,aAASC,gBAAT,GAA4B;AAC1B,UAAI;AACF,YAAIC,SAASZ,KAAKY,MAAL,IAAeX,MAAMW,MAArB,IAA+BZ,KAAKa,GAAL,CAASD,MAArD;AACA,YAAIE,EAAEC,QAAF,CAAWH,MAAX,CAAJ,EAAwB;AACtBA,mBAASI,SAASJ,OAAOK,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAT,EAAmC,EAAnC,CAAT;AACD;;AAEF;AACA;;AAECnB,aAAKoB,GAAL,CAAS,QAAT,EAAmBN,SAAS,IAA5B;;AAEA,eAAO,IAAP;AACD,OAZD,CAYE,OAAMO,CAAN,EAAS;AAAE;AACX,eAAO,KAAP;AACD;AACF;;AAED,aAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiC;AAC/B,aAAO,2BAA2BtB,KAAKC,KAAL,CAAWsB,QAAtC,GAAiD,uCAAjD,GAA2FD,MAAME,KAAjG,GAAyG,KAAzG,GAAiHH,KAAjH,GAAyH,OAAzH,GAAmII,KAAKC,KAAL,CAAWJ,MAAMK,OAAjB,CAAnI,GAA+J,SAAtK;AACD;;AAED,aAASC,MAAT,GAAkB;AAChB,UAAIC,YAAYC,QAAQC,OAAR,CAAgBzB,OAAhB,CAAhB;AACAuB,gBAAUG,KAAV,CAAgBC,KAAhB;;AAEA,UAAIC,WAAWC,KAAKC,KAAL,CAAWnC,MAAMoC,QAAjB,CAAf;AACAR,gBAAUS,IAAV,CAAeC,MAAf,CAAsBL,SAASI,IAA/B;AACD;;AAED,aAASE,gBAAT,GAA4B;AAC1B,UAAIC,UAAU;AACZC,gBAAQ,MADI;AAEZC,kBAAU,UAFE;AAGZ/B,gBAAQd,KAAKc,MAAL,KAAgB;AAHZ,OAAd;AAKAP,iBAAWa,GAAX,CAAeuB,OAAf;AACD;;AAED,aAAShC,MAAT,GAAkB;AAChBR,cAAQD,KAAKC,KAAb;;AAEA,UAAIU,kBAAJ,EAAwB;AACtB,YAAIT,OAAJ,EAAa;AACZI,oBAAUJ,OAAV;;AAEA,cAAII,QAAQsC,YAAR,CAAqB,MAArB,KAAgC,WAApC,EAAiD;AAC/CtC,oBAAQuC,eAAR,CAAwB,MAAxB;AACA7C,iBAAK8C,WAAL,GAAmB,CAAnB;AACA;;AAEFN;;AAEA,cAAI,CAACxC,KAAK8C,WAAV,EAAuB;AACrBlB;AACA3B,kBAAM8C,MAAN,CAAa/C,IAAb,EAAmBM,OAAnB;AACAN,iBAAK8C,WAAL,GAAmB,CAAnB;AACD;;AAED7C,gBAAM+C,YAAN,CAAmBhD,IAAnB,EAAyBM,OAAzB;;AAEAA,oBAAU,IAAV;AACA,SAnBD,MAoBK;AACHN,eAAK8C,WAAL,GAAmB,CAAnB;AACD;AACF;AACF;AACF;;qBAhFuBlD,I;;;;AANjBkB,O;;AACAmC,O;;AAGKnB,a","file":"rendering.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport 'jquery.flot';\nimport 'jquery.flot.pie';\nimport * as SnapLib  from './node_modules/snapsvg/dist/snap.svg-min.js';\n\nexport default function link(scope, elem, attrs, ctrl) {\n  var panel;\n  var svgelem = elem[0].getElementsByClassName('svg-object')[0];\n  elem = elem.find('.svg-panel');\n  var plotCanvas = elem.find('.plot-canvas');\n  var svgnode;\n\n  ctrl.events.on('render', function() {\n    render();\n    ctrl.renderingCompleted();\n  });\n\n  function setElementHeight() {\n    try {\n      var height = ctrl.height || panel.height || ctrl.row.height;\n      if (_.isString(height)) {\n        height = parseInt(height.replace('px', ''), 10);\n      }\n\n     // height -= 5; // padding\n     // height -= panel.title ? 12 : 5; // subtract panel title bar\n\n      elem.css('height', height + 'px');\n\n      return true;\n    } catch(e) { // IE throws errors sometimes\n      return false;\n    }\n  }\n\n  function formatter(label, slice) {\n    return \"<div style='font-size:\" + ctrl.panel.fontSize + \";text-align:center;padding:2px;color:\" + slice.color + \";'>\" + label + \"<br/>\" + Math.round(slice.percent) + \"%</div>\";\n  }\n\n  function addSVG() {\n    let parentSVG = SnapLib.default(svgnode);\n    parentSVG.paper.clear();\n\n    let childSVG = Snap.parse(panel.svg_data);\n    parentSVG.node.append(childSVG.node);\n  } \n\n  function resizePlotCanvas() {     \n    var plotCss = {\n      margin: 'auto',\n      position: 'relative',\n      height: elem.height() + 'px'\n    };\n    plotCanvas.css(plotCss);\n  }\n   \n  function render() {\n    panel = ctrl.panel;\n\n    if (setElementHeight()) { \n      if (svgelem) {\n      \tsvgnode = svgelem;\n      \t\n      \tif (svgnode.getAttribute(\"name\") == 'isInitial') {\n      \t  svgnode.removeAttribute(\"name\");\n      \t  ctrl.initialized = 0;\n        }\n      \n      \tresizePlotCanvas();\n            \n      \tif (!ctrl.initialized) {\n        \taddSVG();    \n        \tpanel.doInit(ctrl, svgnode);\n        \tctrl.initialized = 1;\n      \t}\n        \n      \tpanel.handleMetric(ctrl, svgnode); \n      \n      \tsvgnode = null;\n      }\n   \t  else {\n        ctrl.initialized = 0;\n      }\n    }\n  }\n}\n\n"]}